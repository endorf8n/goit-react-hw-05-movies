{"version":3,"file":"static/js/50.c37ef7bb.chunk.js","mappings":"wPAEaA,EAAcC,EAAAA,GAAAA,GAAH,oGAOXC,EAAeD,EAAAA,GAAAA,GAAH,oEAKZE,EAAgBF,EAAAA,GAAAA,EAAH,oE,SCkB1B,EA3BgB,WACd,OAAwCG,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAgBM,EAAjC,GAC/B,GAAE,CAACL,IAEAF,EAAaQ,OAAS,EACjB,6CAIP,0BACE,SAACb,EAAD,UACGK,EAAaS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,UAACf,EAAD,WAAc,WAASc,MACvB,SAACb,EAAD,UAAgBc,MAFTF,EADO,OASzB,C,yLCxBKG,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cAAc,UAAD,OALf,uNAMEC,OAAQ,sBAICC,EAAiB,mCAAG,sGACRN,EAASO,IAAI,sCADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAASO,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMd,GAAN,yFACHG,EAASO,IAAT,iBAAuBV,IADpB,uBAClBW,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAY,mCAAG,WAAMf,GAAN,yFACHG,EAASO,IAAT,iBAAuBV,EAAvB,4BADG,uBAClBW,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZhB,EAAe,mCAAG,WAAMK,GAAN,yFACNG,EAASO,IAAT,iBACXV,EADW,mCADM,uBACrBW,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/Reviews/reviews.styled.js","components/Reviews/Reviews.jsx","service/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 30px;\n`;\n\nexport const ReviewAuthor = styled.h3`\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 14px;\n  margin-bottom: 12px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'service/movieApi';\nimport { ReviewAuthor, ReviewContent, ReviewsList } from './reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(({ results }) => setMovieReviews(results));\n  }, [movieId]);\n\n  if (movieReviews.length < 1) {\n    return \"We don't have any reviews for this movie.\";\n  }\n\n  return (\n    <div>\n      <ReviewsList>\n        {movieReviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <ReviewAuthor>Author: {author}</ReviewAuthor>\n            <ReviewContent>{content}</ReviewContent>\n          </li>\n        ))}\n      </ReviewsList>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// const API_KEY = '2ab057e37632a319c6bf25dc9b438352';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYWIwNTdlMzc2MzJhMzE5YzZiZjI1ZGM5YjQzODM1MiIsInN1YiI6IjY0YTQzYjBkMTEzODZjMDExYzNiNmNiYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QEBANYEMuDbGQ9lrMDDAfxfmCJPA7p9-xGcIcjlQ8fk';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization: `Bearer ${TOKEN}`,\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?language=en-US');\n  return data;\n};\n\nexport const getFilteredMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["ReviewsList","styled","ReviewAuthor","ReviewContent","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","results","length","map","id","author","content","instance","axios","baseURL","headers","Authorization","accept","getTrendingMovies","get","data","getFilteredMovies","query","getMovieInfo","getMovieCast"],"sourceRoot":""}