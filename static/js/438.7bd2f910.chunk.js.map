{"version":3,"file":"static/js/438.7bd2f910.chunk.js","mappings":"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","sources":["styles/movieDetails.styled.js","pages/MovieDetails.jsx","service/formatDate.js","service/movieApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkGoBack = styled(Link)`\n  display: block;\n  width: 100px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  padding: 30px;\n`;\n\nexport const MovieDetailsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 28px;\n`;\n\nexport const MoviesInfoText = styled.p`\n  font-size: 14px;\n`;\n\nexport const AddInfoText = styled.h3`\n  padding: 5px 30px;\n`;\n\nexport const AddInfoItem = styled.li`\n  padding: 0 30px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { formatDateToYear } from 'service/formatDate';\nimport { getMovieInfo } from 'service/movieApi';\nimport {\n  AddInfoItem,\n  AddInfoText,\n  LinkGoBack,\n  MovieDetailsStyled,\n  MovieTitle,\n  MoviesInfoText,\n  Wrapper,\n} from 'styles/movieDetails.styled';\nimport posterDefault from './../../src/service/images/NoPosterImage.jpg';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  useEffect(() => {\n    getMovieInfo(movieId).then(data => setMovieInfo(data));\n  }, [movieId]);\n\n  if (!movieInfo) return;\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieInfo;\n\n  const releaseDateToYear = formatDateToYear(release_date);\n\n  const userScorePercentage = voteAverage => {\n    return Math.round(Number(voteAverage) * 10);\n  };\n\n  const userScore = userScorePercentage(vote_average);\n\n  return (\n    <div>\n      <LinkGoBack to={location?.state?.from || '/'}>Go back</LinkGoBack>\n      <Wrapper>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : `${posterDefault}`\n          }\n          alt=\"original_title\"\n          width=\"200\"\n        />\n\n        <MovieDetailsStyled>\n          <MovieTitle>\n            {original_title} ({releaseDateToYear})\n          </MovieTitle>\n          <MoviesInfoText>Users score: {userScore} %</MoviesInfoText>\n          <h3>Overview</h3>\n          <MoviesInfoText>{overview}</MoviesInfoText>\n          <h3>Genres</h3>\n          <MoviesInfoText>\n            {genres.map(({ name, id }) => (\n              <span key={id}>{name} </span>\n            ))}\n          </MoviesInfoText>\n        </MovieDetailsStyled>\n      </Wrapper>\n      <AddInfoText>Additional information</AddInfoText>\n      <ul>\n        <AddInfoItem>\n          <Link to=\"cast\">Cast</Link>\n        </AddInfoItem>\n        <AddInfoItem>\n          <Link to=\"reviews\">Reviews</Link>\n        </AddInfoItem>\n      </ul>\n      <Suspense\n        fallback={\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { format } from 'date-fns';\n\nexport const formatDateToYear = date => {\n  if (date) {\n    return format(new Date(date), 'yyyy');\n  }\n};\n","import axios from 'axios';\n\n// const API_KEY = '2ab057e37632a319c6bf25dc9b438352';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYWIwNTdlMzc2MzJhMzE5YzZiZjI1ZGM5YjQzODM1MiIsInN1YiI6IjY0YTQzYjBkMTEzODZjMDExYzNiNmNiYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QEBANYEMuDbGQ9lrMDDAfxfmCJPA7p9-xGcIcjlQ8fk';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization: `Bearer ${TOKEN}`,\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?language=en-US');\n  return data;\n};\n\nexport const getFilteredMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["LinkGoBack","styled","Link","Wrapper","MovieDetailsStyled","MovieTitle","MoviesInfoText","AddInfoText","AddInfoItem","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","useEffect","getMovieInfo","then","data","voteAverage","poster_path","original_title","release_date","vote_average","overview","genres","releaseDateToYear","date","format","Date","formatDateToYear","userScore","Math","round","Number","to","state","from","src","alt","width","map","name","id","Suspense","fallback","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","instance","axios","baseURL","headers","Authorization","accept","getTrendingMovies","get","getFilteredMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}