{"version":3,"file":"static/js/206.0612b194.chunk.js","mappings":"2PAEaA,EAAWC,EAAAA,GAAAA,GAAH,0CAIRC,EAAeD,EAAAA,GAAAA,GAAH,gDAIZE,EAAWF,EAAAA,GAAAA,EAAH,0FAMRG,EAAgBH,EAAAA,GAAAA,EAAH,mE,SCwB1B,EAlCa,WACX,OAAkCI,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAaM,EAA3B,GAC5B,GAAE,CAACL,IAECF,EAEL,OACE,0BACE,SAACN,EAAD,UACGM,EAAUQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,UAAChB,EAAD,YACE,gBACEiB,IACEH,EAAY,0CAC2BA,GAD3B,U,+uIAIdI,IAAKH,EACLI,MAAM,QAER,UAAClB,EAAD,WAAU,SAAOc,MACjB,UAACb,EAAD,WAAe,cAAYc,OAXVH,EADN,OAkBtB,C,yLChCKO,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cAAc,UAAD,OALf,uNAMEC,OAAQ,sBAICC,EAAiB,mCAAG,sGACRN,EAASO,IAAI,sCADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAASO,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMlB,GAAN,yFACHO,EAASO,IAAT,iBAAuBd,IADpB,uBAClBe,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZnB,EAAY,mCAAG,WAAMI,GAAN,yFACHO,EAASO,IAAT,iBAAuBd,EAAvB,4BADG,uBAClBe,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAMnB,GAAN,yFACNO,EAASO,IAAT,iBACXd,EADW,mCADM,uBACrBe,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/Cast/cast.styled.js","components/Cast/Cast.jsx","service/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding: 30px;\n`;\n\nexport const CastListItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const CastName = styled.p`\n  margin-bottom: 12px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n  font-style: italic;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'service/movieApi';\nimport { CastCharacter, CastList, CastListItem, CastName } from './cast.styled';\nimport noProfilePhoto from './../../service/images/NoProfilePicture.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(({ cast }) => setMovieCast(cast));\n  }, [movieId]);\n\n  if (!movieCast) return;\n\n  return (\n    <div>\n      <CastList>\n        {movieCast.map(({ id, profile_path, name, character }) => (\n          <CastListItem key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : `${noProfilePhoto}`\n              }\n              alt={name}\n              width=\"80\"\n            />\n            <CastName>Name: {name}</CastName>\n            <CastCharacter>Character: {character}</CastCharacter>\n          </CastListItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// const API_KEY = '2ab057e37632a319c6bf25dc9b438352';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYWIwNTdlMzc2MzJhMzE5YzZiZjI1ZGM5YjQzODM1MiIsInN1YiI6IjY0YTQzYjBkMTEzODZjMDExYzNiNmNiYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QEBANYEMuDbGQ9lrMDDAfxfmCJPA7p9-xGcIcjlQ8fk';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization: `Bearer ${TOKEN}`,\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?language=en-US');\n  return data;\n};\n\nexport const getFilteredMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["CastList","styled","CastListItem","CastName","CastCharacter","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCast","then","cast","map","id","profile_path","name","character","src","alt","width","instance","axios","baseURL","headers","Authorization","accept","getTrendingMovies","get","data","getFilteredMovies","query","getMovieInfo","getMovieReviews"],"sourceRoot":""}