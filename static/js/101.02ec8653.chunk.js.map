{"version":3,"file":"static/js/101.02ec8653.chunk.js","mappings":"0MAEaA,E,QAAmBC,GAAAA,GAAH,oG,SCkB7B,EAjBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,WAAyBC,GAAzB,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,UACGG,EAAQ,EAAE,KAAGE,MAFTD,EADC,OAUnB,C,+HChBYK,EAAaX,EAAAA,GAAAA,KAAH,8CAGVY,EAAQZ,EAAAA,GAAAA,MAAH,qGAOLa,EAAYb,EAAAA,GAAAA,OAAH,qS,SCRTc,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,UAACP,EAAD,CAAYI,SARO,SAAAI,GACnBA,EAAEC,iBAEFL,EAASE,GACTC,EAAS,GACV,EAGC,WACE,SAACN,EAAD,CACES,KAAK,OACLC,KAAK,SACLL,MAAOA,EACPM,SAfoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAASM,EAAOP,MAAhC,EAgBpBQ,YAAY,oBACZC,UAAQ,EACRC,WAAS,KAEX,SAACd,EAAD,CAAWQ,KAAK,SAAhB,SAAyB,aAG9B,E,oBCCD,EAzBe,WACb,OAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAe8B,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQJ,EAAaK,IAAI,SAC1BD,IAILE,EAAAA,EAAAA,IAAkBF,GAAOG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAUM,EAA3B,GAC/B,GAAE,CAACR,IAMJ,OACE,iCACE,SAACf,EAAD,CAAkBC,SAND,SAAAkB,GACnBH,EAAgB,CAAEG,MAAAA,GACnB,KAKG,SAACK,EAAA,EAAD,CAAYrC,OAAQA,MAGzB,C,yLCvBKsC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cAAc,UAAD,OALf,uNAMEC,OAAQ,sBAICC,EAAiB,mCAAG,sGACRN,EAASL,IAAI,sCADL,uBACvBY,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBX,EAAiB,mCAAG,WAAMF,GAAN,yFACRM,EAASL,IAAT,8BAAoCD,IAD5B,uBACvBa,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBC,EAAY,mCAAG,WAAMzC,GAAN,yFACHiC,EAASL,IAAT,iBAAuB5B,IADpB,uBAClBwC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAY,mCAAG,WAAM1C,GAAN,yFACHiC,EAASL,IAAT,iBAAuB5B,EAAvB,4BADG,uBAClBwC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAe,mCAAG,WAAM3C,GAAN,yFACNiC,EAASL,IAAT,iBACX5B,EADW,mCADM,uBACrBwC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/MoviesList/moviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SerchMoviesForm/searchMoviesForm.styled.js","components/SerchMoviesForm/SearchMoviesForm.jsx","pages/Movies.jsx","service/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 30px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { StyledMoviesList } from './moviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <StyledMoviesList>\n        {movies.map(({ id, original_title }, index) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {index + 1}. {original_title}\n            </Link>\n          </li>\n        ))}\n      </StyledMoviesList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  padding: 5px 30px;\n`;\nexport const Input = styled.input`\n  font-size: 16px;\n  width: 300px;\n  height: 32px;\n  border-radius: 4px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  font-size: 16px;\n  width: 120px;\n  height: 36px;\n  border-radius: 4px;\n  border-color: transparent;\n  background-color: #d3d3d3;\n  color: black;\n  cursor: pointer;\n  &:hover {\n    background-color: #fa8072;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, SearchBtn, StyledForm } from './searchMoviesForm.styled';\n\nexport const SearchMoviesForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChangeValue = ({ target }) => setValue(target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        value={value}\n        onChange={handleChangeValue}\n        placeholder=\"Enter movie title\"\n        required\n        autoFocus\n      />\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </StyledForm>\n  );\n};\n\nSearchMoviesForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchMoviesForm } from 'components/SerchMoviesForm/SearchMoviesForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilteredMovies } from 'service/movieApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n\n    getFilteredMovies(query).then(({ results }) => setMovies(results));\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchMoviesForm onSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n// const API_KEY = '2ab057e37632a319c6bf25dc9b438352';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYWIwNTdlMzc2MzJhMzE5YzZiZjI1ZGM5YjQzODM1MiIsInN1YiI6IjY0YTQzYjBkMTEzODZjMDExYzNiNmNiYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QEBANYEMuDbGQ9lrMDDAfxfmCJPA7p9-xGcIcjlQ8fk';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization: `Bearer ${TOKEN}`,\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?language=en-US');\n  return data;\n};\n\nexport const getFilteredMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["StyledMoviesList","styled","movies","location","useLocation","map","index","id","original_title","to","state","from","StyledForm","Input","SearchBtn","SearchMoviesForm","onSubmit","useState","value","setValue","e","preventDefault","type","name","onChange","target","placeholder","required","autoFocus","useSearchParams","searchParams","setSearchParams","setMovies","useEffect","query","get","getFilteredMovies","then","results","MoviesList","instance","axios","baseURL","headers","Authorization","accept","getTrendingMovies","data","getMovieInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}